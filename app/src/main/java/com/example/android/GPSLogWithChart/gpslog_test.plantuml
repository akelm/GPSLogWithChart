@startuml

title __GPSLOG_TEST's Class Diagram__\n

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.ActivityAdapter {
        - activity : Activity
        - listActivity : List<ExerciseEntity>
        + ActivityAdapter()
        + getItemCount()
        + onBindViewHolder()
        + onCreateViewHolder()
        + setOnItemClickListener()
        ~ getExercise()
        ~ setExercises()
    }
  }
  

  namespace com.example.android.gpslog_test {
    interface com.example.android.gpslog_test.ActivityAdapter.OnItemClickListener {
        {abstract} + onItemClick()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.ActivityViewHolder {
        + actDurText : TextView
        + actStartText : TextView
        + actTypeImg : ImageView
        + clockImg : ImageView
        + deleteView : MaterialCardView
        + historyView : MaterialCardView
        + ActivityViewHolder()
    }
  }
  

  namespace com.example.android.gpslog_test {
    abstract class com.example.android.gpslog_test.AppDatabase {
        {static} ~ databaseWriteExecutor : ExecutorService
        {static} - INSTANCE : AppDatabase
        {static} - NUMBER_OF_THREADS : int
        {static} - sRoomDatabaseCallback : Callback
        {abstract} ~ appDatabaseDao()
        {static} ~ getDatabase()
    }
  }
  

  namespace com.example.android.gpslog_test {
    interface com.example.android.gpslog_test.AppDatabaseDao {
        {abstract} + deleteExercise()
        {abstract} + getAllTracks()
        {abstract} + getExerLastTrack()
        {abstract} + getExercises()
        {abstract} + getLastTrack()
        {abstract} + getTracks()
        {abstract} + getTypes()
        {abstract} + insertExercise()
        {abstract} + insertTrack()
        {abstract} + insertType()
        {abstract} + updateExercise()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.AppRepository {
        ~ gpsOk : MutableLiveData<Boolean>
        - allTracks : LiveData<List<TrackEntity>>
        - lastTrack : LiveData<TrackEntity>
        - mExercises : LiveData<List<ExerciseEntity>>
        + stopGps()
        ~ AppRepository()
        ~ deleteExercise()
        ~ getAllTracks()
        ~ getExerLastTrack()
        ~ getExercises()
        ~ getGpsOk()
        ~ getLastTrack()
        ~ getTracks()
        ~ getTypes()
        ~ insertExercise()
        ~ insertTrack()
        ~ startGPS()
        ~ updateExercise()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.AppViewModel {
        ~ gpsOK : MutableLiveData<Boolean>
        ~ lastType : MutableLiveData<TypeEntity>
        ~ state : MutableLiveData<AppState>
        ~ types : List<TypeEntity>
        - absoluteLastTrack : LiveData<TrackEntity>
        - allTracks : LiveData<List<TrackEntity>>
        - currentExercise : MutableLiveData<ExerciseEntity>
        - lastTrack : MutableLiveData<TrackEntity>
        - mExercises : LiveData<List<ExerciseEntity>>
        - mTracks : MutableLiveData<List<TrackEntity>>
        + AppViewModel()
        + getAllTracks()
        + getGpsOk()
        + getState()
        + matchCurrExerWithLastType()
        + nextState()
        + setState()
        + stopGps()
        ~ collectData()
        ~ deleteExercise()
        ~ doNothing()
        ~ getAbsoluteLastTrack()
        ~ getCurrentExercise()
        ~ getExerLastTrack()
        ~ getExercises()
        ~ getLastTrack()
        ~ getLastType()
        ~ getLastTypeInd()
        ~ getTracks()
        ~ getTypeInd()
        ~ loadHistoryTracks()
        ~ setCurrentExercise()
        ~ setLastTrack()
        ~ setLastType()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.AppViewModel.AppState {
        + AppState()
        + getState()
    }
  }
  

  namespace com.example.android.gpslog_test {
    enum States {
      GPS
      HISTORY
      NOTHING
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.ChartManage {
        {static} + TOHOURS : long
        {static} + TOMINS : long
        {static} + chart : LineChart
        {static} + data : LineData
        {static} + timeUnit : TimeUnit
        {static} ~ activity : Activity
        {static} - instance : ChartManage
        - listActivity : List<ExerciseEntity>
        {static} + addEntry()
        {static} + addTrack()
        {static} + clearChart()
        {static} + getInstance()
        + onNothingSelected()
        + onValueSelected()
        {static} + setData()
        {static} + setSelected()
        + setup()
        {static} + timeToCurrentUnits()
        - ChartManage()
        - chartStyleSetup()
        {static} - createSet()
    }
  }
  

  namespace com.example.android.gpslog_test {
    enum TimeUnit {
      HOURS
      MINUTES
      SECONDS
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.ExerciseEntity {
        ~ start : Long
        ~ typeId : String
        + ExerciseEntity()
        + ExerciseEntity()
        + getStart()
        + getTypeId()
        + setStart()
        + setTypeId()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.LocManage {
        {static} ~ application : Application
        {static} ~ duration : long
        {static} ~ gpsOk : MutableLiveData<Boolean>
        {static} ~ instance : LocManage
        {static} ~ locationListener : LocationListener
        {static} ~ locationManager : LocationManager
        {static} ~ start : long
        {static} - mRepository : AppRepository
        {static} + getGpsOk()
        {static} + getInstance()
        {static} + setup()
        {static} + stopGPS()
        {static} ~ startGPS()
        - LocManage()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.LocManage.MyLocationListener {
        + MyLocationListener()
        + onLocationChanged()
        + onProviderDisabled()
        + onProviderEnabled()
        + onStatusChanged()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.MainActivity {
        {static} + listFabIcon : int[]
        {static} + listImg : int[]
        {static} + listImgTint : int[]
        {static} + permissions : String[]
        + onPause()
        + onResume()
        # onCreate()
        - menuSwitch()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.MapManage {
        {static} + line : Polyline
        {static} + maxV : float
        {static} + minV : float
        {static} + selectedMarker : Marker
        {static} + velocities : ArrayList<Float>
        {static} ~ colorMapVar : ColorMappingVariationHue
        {static} ~ mScaleBarOverlay : ScaleBarOverlay
        {static} ~ map : MapView
        {static} ~ paintList : PolychromaticPaintList
        {static} - activity : Activity
        {static} - context : Context
        {static} - instance : MapManage
        {static} - paint : Paint
        {static} + addTrack()
        {static} + clearMap()
        {static} + displayMap()
        {static} + getInstance()
        {static} + setData()
        {static} + setMapOffset()
        {static} + setSelected()
        {static} + setup()
        {static} + updateLine()
        {static} + updateVelocities()
        {static} ~ updatePaintlist()
        - MapManage()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.MapManage.MyColorList {
        + getColorForIndex()
        ~ MyColorList()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.TrackEntity {
        ~ alt : Double
        ~ exerId : Long
        ~ lat : Double
        ~ lon : Double
        ~ time : Long
        ~ vel : Float
        - id : Integer
        + TrackEntity()
        + TrackEntity()
        + getAlt()
        + getExerId()
        + getId()
        + getLat()
        + getLon()
        + getTime()
        + getVel()
        + setAlt()
        + setExerId()
        + setId()
        + setLat()
        + setLon()
        + setTime()
        + setVel()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.TypeEntity {
        - typeName : String
        + TypeEntity()
        + TypeEntity()
        + getTypeName()
        + setTypeName()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.Utils {
        {static} ~ requestMultiplePermissions()
        {static} ~ requestSinglePermission()
    }
  }
  

  namespace com.example.android.gpslog_test {
    class com.example.android.gpslog_test.VerticalTextView {
        ~ topDown : boolean
        + VerticalTextView()
        # onDraw()
        # onMeasure()
    }
  }
  

  com.example.android.gpslog_test.ActivityAdapter -up-|> androidx.recyclerview.widget.RecyclerView.Adapter
  com.example.android.gpslog_test.ActivityAdapter o-- com.example.android.gpslog_test.ActivityAdapter.OnItemClickListener : listener
  com.example.android.gpslog_test.ActivityAdapter +-down- com.example.android.gpslog_test.ActivityAdapter.OnItemClickListener
  com.example.android.gpslog_test.ActivityViewHolder -up-|> androidx.recyclerview.widget.RecyclerView.ViewHolder
  com.example.android.gpslog_test.AppDatabase -up-|> androidx.room.RoomDatabase
  com.example.android.gpslog_test.AppRepository o-- com.example.android.gpslog_test.AppDatabaseDao : appDatabaseDao
  com.example.android.gpslog_test.AppViewModel -up-|> androidx.lifecycle.AndroidViewModel
  com.example.android.gpslog_test.AppViewModel o-- com.example.android.gpslog_test.AppRepository : mRepository
  com.example.android.gpslog_test.AppViewModel +-down- com.example.android.gpslog_test.AppViewModel.AppState
  com.example.android.gpslog_test.AppViewModel +-down- com.example.android.gpslog_test.AppViewModel.States
  com.example.android.gpslog_test.AppViewModel.AppState o-- com.example.android.gpslog_test.AppViewModel.States : state
  com.example.android.gpslog_test.ChartManage .up.|> com.github.mikephil.charting.listener.OnChartValueSelectedListener
  com.example.android.gpslog_test.ChartManage +-down- com.example.android.gpslog_test.ChartManage.TimeUnit
  com.example.android.gpslog_test.LocManage +-down- com.example.android.gpslog_test.LocManage.MyLocationListener
  com.example.android.gpslog_test.LocManage.MyLocationListener .up.|> android.location.LocationListener
  com.example.android.gpslog_test.LocManage.MyLocationListener o-- com.example.android.gpslog_test.ExerciseEntity : exer
  com.example.android.gpslog_test.MainActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.android.gpslog_test.MainActivity o-- com.example.android.gpslog_test.AppViewModel : appViewModel
  com.example.android.gpslog_test.MapManage +-down- com.example.android.gpslog_test.MapManage.MyColorList
  com.example.android.gpslog_test.MapManage.MyColorList -up-|> org.osmdroid.views.overlay.advancedpolyline.ColorMappingVariationHue
  com.example.android.gpslog_test.VerticalTextView -up-|> androidx.appcompat.widget.AppCompatTextView


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
